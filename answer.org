* Понятие тестирования и его виды
** Тестирование — это процесс оценки и проверки программного обеспечения (ПО) с целью выявления ошибок, недочетов и несоответствий требованиям. Основные виды тестирования включают:
*** Функциональное тестирование: проверка функциональности ПО.
*** Регрессивное тестирование: проверка, что изменения в коде не повлияли на существующий функционал.
*** Тестирование производительности: оценка скорости, масштабируемости и стабильности ПО под нагрузкой.
*** Тестирование безопасности - тестирование ПО на исключение уязвимостей.
* TODO Основные встроенные типы данных в современных в языках программирования
* Понятие отладки и её процессы
** Отладка — это процесс поиска и устранения ошибок в программном обеспечении. Основные этапы отладки включают:
*** Выявление ошибки: определение, где и почему произошел сбой.
*** Анализ: изучение кода и логов для понимания причины ошибки.
*** Исправление: внесение изменений в код для устранения проблемы.
*** Тестирование: проверка, что исправление не вызвало новых ошибок.
* TODO ER- моделирование структуры БД. Компоненты диаграммы ERwin.
* Цикл тестирования и его виды. Задачи частного цикла тестирования. Задачи полного цикла тестирования.
** Цикл тестирования — это последовательность этапов, которые проходят в процессе тестирования ПО. Основные виды:
*** Частный цикл тестирования: включает в себя тестирование отдельных компонентов или модулей.
*** Полный цикл тестирования: охватывает все этапы тестирования от планирования до завершения, включая тестирование на всех уровнях.
** Задачи частного цикла тестирования:
*** Проверка функциональности отдельных модулей.
*** Выявление ошибок на ранних стадиях разработки.
** Задачи полного цикла тестирования:
*** Обеспечение качества всего ПО.
*** Подтверждение соответствия требованиям.
* TODO Системы контроля версий. GIT. Основные возможности. Работа с клиентом командной строки
* Понятие уровня тестирования
** Уровень тестирования — это стадия, на которой проводится тестирование. Основные уровни:
*** Модульное тестирование: тестирование отдельных модулей.
*** Интеграционное тестирование: тестирование взаимодействия между модулями.
*** Системное тестирование: тестирование всей системы в целом.
*** Приемочное тестирование: проверка готовности ПО к эксплуатации.
* TODO Сущность диаграммы UML
* Модульное тестирование
** Модульное тестирование — это процесс тестирования отдельных модулей или компонентов ПО. Цель — выявить ошибки на ранней стадии разработки. Обычно выполняется разработчиками с использованием автоматизированных тестов.
* TODO Язык унифицированного моделирования UML
* Интеграционное тестирование
** Интеграционное тестирование — это процесс тестирования взаимодействия между модулями или компонентами системы. Цель — выявить ошибки, возникающие при взаимодействии различных частей системы.
* TODO Функциональный метод IDEF3
* Системное тестирование
** Системное тестирование — это процесс тестирования всей системы в целом, чтобы убедиться, что она соответствует заданным требованиям. Включает функциональное и нефункциональное тестирование.
* TODO Функциональное моделирование бизнес-процессов с использованием стандарта IDEFO
* TODO Выходное тестирование. Приёмочное тестирование
* TODO Case - технологии
* Требования к ПО и его реализация. Техника отслеживания хода выполнения программных проектов
** Требование к ПО определяются на стадии написания ТЗ. В нём прописываются основные требования которые должно соблюдать будущее ПО.
* TODO Обработка исключений (Exceptions) в Android.
* Тетрадь событий проекта. Отчеты.
** Тетрадь событий проекта — это документ, в котором фиксируются все важные события, изменения и решения, принятые в ходе проекта.
** Отчеты — это документы, которые содержат информацию о ходе выполнения проекта, достигнутых результатах и выявленных проблемах.
* Тестирование программы как «черного ящика». Тестирование программ методами «белого ящика»
** Тестирование как «черного ящика» — это метод, при котором тестировщик не знает внутренней структуры программы и тестирует ее только на основе входных данных и ожидаемых выходных.
** Тестирование методами «белого ящика» — это метод, при котором тестировщик имеет доступ к внутреннему коду и структуре программы, что позволяет ему разрабатывать тесты на основе логики и алгоритмов.
* TODO Жизненный цикл Activity
* Эффективность программного обеспечения
** Эффективность программного обеспечения — это способность ПО выполнять свои функции с минимальными затратами ресурсов (времени, памяти, вычислительной мощности). Эффективность можно оценивать по различным критериям, таким как производительность, надежность и удобство использования.
* TODO Структура Android проекта
* Оптимизация программ
** Оптимизация программ — это процесс улучшения производительности и эффективности программного обеспечения. Это может включать:
*** Улучшение алгоритмов (рефакторинг).
*** Устранение избыточного кода.
*** Использование более оптимизированных библиотек.
* TODO Интерфейсы. Абстрактные классы
* Аттестация программного обеспечения
** Аттестация программного обеспечения — это процесс оценки и проверки ПО на соответствие установленным требованиям и стандартам. Это может включать в себя тестирование, верификацию и аудит.
* TODO Назначение и содержание ТЗ.
* Методы отладки программного обеспечения
** Трассировка: отслеживание выполнения программы для выявления ошибок.
** Логирование: запись информации о работе программы.
** Использование отладчиков: пошаговое выполнение кода и анализа состояния переменных.
* TODO Основные понятия ООП. Инкапсуляция
* Адаптация программного обеспечения
** Адаптация программного обеспечения — это процесс изменения ПО для соответствия новым требованиям или условиям эксплуатации. Это может включать обновление функциональности, изменение интерфейса или интеграцию с другими системами.
* TODO Методы проведения обследования
* Понятие верификации и контроля качества ПП
** Верификация — это процесс проверки, соответствует ли продукт заданным требованиям и спецификациям.
** Контроль качества программного обеспечения включает в себя все мероприятия, направленные на обеспечение соответствия ПО установленным стандартам и требованиям, включая тестирование, прохождение испытаний.
* TODO Каноническое проектирование ИС
* Международные стандарты, касающиеся верификации ПО
**    ISO/IEC 25010: стандарт, описывающий качество программного обеспечения и его характеристик.
**    ISO/IEC 12207: стандарт, касающийся процессов жизненного цикла программного обеспечения, включая верификацию и валидацию.
**    IEEE 1012: стандарт, описывающий процессы верификации и валидации программного обеспечения.
* TODO Основные понятия ООП. Полиморфизм.
* TODO Основные понятие ООП. Наследование.
* Необходимость принятия мер по защите ПП и БД. Цели защиты ПО. Способы защиты ПП и БД. Программные системы защиты
** Необходимость защиты ПО и БД обусловлена рисками утечки данных, несанкционированного доступа и потери информации.
** Способы защиты:
*** Шифрование данных.
*** Аутентификация и авторизация пользователей.
*** Регулярные обновления ПО.
*** Антивирусные программы.
* TODO Модели жизненного цикла ИС
* Категории прав и правовые методы защиты ПП и БД
** Категории прав на программное обеспечение и базы данных включают:
*** Авторские права: защищают оригинальные произведения, включая код и документацию.
*** Патенты: могут защищать уникальные алгоритмы и технологии.
*** Торговые марки: защищают названия и логотипы.
** Правовые методы защиты включают:
*** Лицензирование программного обеспечения.
*** Регистрация авторских прав.
*** Патентование изобретений.
* TODO Жизненный цикл ИС
* Понятие рефакторинга программного кода.
** Рефакторинг — это процесс изменения внутренней структуры кода без изменения его внешнего поведения. Цель рефакторинга — улучшение читаемости, поддерживаемости и производительности кода.
* TODO Классификация средств проектирования ИС
* Типы лицензий на программные продукты. Авторское право.
** Лицензии:
*** Коммерческие лицензии: предоставляют право на использование ПО за плату.
*** Открытые лицензии: позволяют пользователям изменять и распространять ПО (например, GPL, MIT).
*** Бесплатные лицензии: предоставляют право на использование без оплаты, но с ограничениями.
** Авторское право защищает оригинальные произведения, включая программный код, и предоставляет правообладателю исключительные права на использование и распространение.
* TODO Классификация методов проектирования ИС
* UI тестирование
** UI тестирование (тестирование пользовательского интерфейса) — это процесс проверки интерфейса приложения на соответствие требованиям и удобство использования. Это включает в себя проверку элементов интерфейса, таких как кнопки, меню и форм.ы
* TODO Области применения языка Java. Объявление класса. Стандартная библиотека классов.
* UX тестирование
** UX тестирование (тестирование пользовательского опыта) — это процесс оценки взаимодействия пользователя с продуктом. Цель — выявить проблемы в удобстве использования и удовлетворенности пользователей. Это может включать в себя тестирование прототипов, опрос
* TODO Мобильное программирование, платформы для разработки. Виды мобильных приложений и их архитектура.
